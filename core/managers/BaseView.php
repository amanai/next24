<?phpclass BaseView{	private $_dataSource = array();	private $_content;	protected $_base_dir = null;	protected $_dir = '/';	protected $_file;	protected $css_url;	protected $js_url;	protected $image_url;			function __construct(){			$request = Project::getRequest();			$url = $request -> getHost();			$tm = Project::getTemplateManager();			$this -> css_url = $url . $tm -> getCssPath();			$this -> js_url = $url . $tm -> getJsPath();			$this -> image_url = $url . $tm -> getImagePath();		}				function __get($param){			return (isset($this -> _dataSource[$param]) ? $this -> _dataSource[$param] : null);		}				function getDataSource(){			return $this -> _dataSource;		}			function parse(){			$template_root = Project::getTemplateManager() -> getTemplateDir();			if ($this -> _base_dir !== null){				$template_root .= $this -> _base_dir;			}			$template_root .= DIRECTORY_SEPARATOR . $this -> _dir . DIRECTORY_SEPARATOR;			$file = $template_root . $this -> _file;						ob_start();			include($file);			$this -> _content = ob_get_contents();			ob_end_clean();						return $this -> _content;		}				private function createUrl($controller = null, $action = null, $param = null){			return Project::getRequest() -> createUrl($controller, $action, $param);		}				function getContent(){			return $this -> _content;		}				function set($param){			// TODO:: need to check, if parameters already exists			$this -> _dataSource = array_merge($this -> _dataSource, $param);		}				function assign($key, $value){			$this -> _dataSource[$key] = $value;		}				function setTemplate($dir = null, $file = null){			// TODO:: need checking for existing			if ($dir){				$this -> _dir = $dir;			}			if ($file){				$this -> _file = $file;			}		}				function escape($str){			return $str;		}				function filter($filterName){			// TODO:: can be realize in classes, which need it		}}?>